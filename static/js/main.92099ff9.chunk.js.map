{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","options","visibleGoods","isReversed","sortType","sort","prevGood","currentGood","ALPHABET","LENGTH","localeCompare","length","reverse","App","NONE","useState","setSortType","setReversed","isSorted","className","type","classNames","onClick","map","good","index","String","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EACAC,GAEA,IAAMC,EAAY,YAAOF,GACjBG,EAAyBF,EAAzBE,WAAYC,EAAaH,EAAbG,SAkBpB,OAhBAF,EAAaG,MAAK,SAACC,EAAUC,GAC3B,IACEC,EAEEX,EAFFW,SACAC,EACEZ,EADFY,OAGF,OAAQL,GACN,KAAKI,EACH,OAAOF,EAASI,cAAcH,GAChC,KAAKE,EACH,OAAOH,EAASK,OAASJ,EAAYI,OACvC,QACE,OAAO,MAINR,EACHD,EAAaU,UACbV,G,SApCDL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAMgB,EAAU,WACrB,IACEJ,EAGEZ,EAHFY,OACAD,EAEEX,EAFFW,SACAM,EACEjB,EADFiB,KAEF,EAAgCC,mBAASD,GAAzC,mBAAOV,EAAP,KAAiBY,EAAjB,KACA,EAAkCD,oBAAS,GAA3C,mBAAOZ,EAAP,KAAmBc,EAAnB,KACMC,EAAWf,GAAeC,IAAaU,EAM7C,OACE,sBAAKK,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYjB,IAAaI,IAE3Bc,QAAS,kBAAON,EAAYR,IAL9B,iCAUA,wBACEY,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYjB,IAAaK,IAE3Ba,QAAS,kBAAON,EAAYP,IAL9B,4BAUA,wBACEW,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAalB,IAEfmB,QAAS,kBAAOL,GAAad,IAL/B,qBAUCe,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA1Cc,WACtBN,EAAYF,GACZG,GAAY,IAqCN,sBAUJ,6BACE,6BACGlB,EACCD,EACA,CACEM,WACAD,eAEFoB,KAAI,SAACC,EAAMC,GAAP,OACJ,oBAA+B,UAAQ,OAAvC,SAA+CD,GAAtCE,OAAOF,EAAOC,eCzHnCE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.92099ff9.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  options: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n  const { isReversed, sortType } = options;\n\n  visibleGoods.sort((prevGood, currentGood) => {\n    const {\n      ALPHABET,\n      LENGTH,\n    } = SortType;\n\n    switch (sortType) {\n      case ALPHABET:\n        return prevGood.localeCompare(currentGood);\n      case LENGTH:\n        return prevGood.length - currentGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: FC = () => {\n  const {\n    LENGTH,\n    ALPHABET,\n    NONE,\n  } = SortType;\n  const [sortType, setSortType] = useState(NONE);\n  const [isReversed, setReversed] = useState(false);\n  const isSorted = isReversed || (sortType !== NONE);\n  const setDefaultState = () => {\n    setSortType(NONE);\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== ALPHABET,\n          })}\n          onClick={() => (setSortType(ALPHABET))}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': sortType !== LENGTH,\n          })}\n          onClick={() => (setSortType(LENGTH))}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => (setReversed(!isReversed))}\n        >\n          Reverse\n        </button>\n\n        {isSorted && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={setDefaultState}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer,\n            {\n              sortType,\n              isReversed,\n            },\n          ).map((good, index) => (\n            <li key={String(good + index)} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}