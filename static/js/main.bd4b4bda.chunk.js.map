{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","options","visibleGoods","isReversed","sortType","sort","prevGood","currentGood","ALPHABET","LENGTH","NONE","localeCompare","length","reverse","App","useState","setSortType","setReversed","visibleReset","className","type","classNames","onClick","map","good","index","toString","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EACAC,GAEA,IAAMC,EAAY,YAAOF,GACjBG,EAAyBF,EAAzBE,WAAYC,EAAaH,EAAbG,SAoBpB,OAlBAF,EAAaG,MAAK,SAACC,EAAUC,GAC3B,IACEC,EAGEX,EAHFW,SACAC,EAEEZ,EAFFY,OAEEZ,EADFa,KAGF,OAAQN,GACN,KAAKI,EACH,OAAOF,EAASK,cAAcJ,GAChC,KAAKE,EACH,OAAOH,EAASM,OAASL,EAAYK,OAGvC,QAAS,OAAO,MAIbT,EACHD,EAAaW,UACbX,G,SAtCDL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAMiB,EAAgB,WAC3B,IACEL,EAGEZ,EAHFY,OACAD,EAEEX,EAFFW,SACAE,EACEb,EADFa,KAEF,EAAgCK,mBAASL,GAAzC,mBAAON,EAAP,KAAiBY,EAAjB,KACA,EAAkCD,oBAAS,GAA3C,mBAAOZ,EAAP,KAAmBc,EAAnB,KACMC,EAAef,GAAeC,IAAaM,EAEjD,OACE,sBAAKS,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYjB,IAAaI,IAE3Bc,QAAS,kBAAON,EAAYR,IAL9B,iCAUA,wBACEY,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYjB,IAAaK,IAE3Ba,QAAS,kBAAON,EAAYP,IAL9B,4BAUA,wBACEW,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAalB,IAEfmB,QAAS,kBAEHL,GADJd,IANJ,qBAcCe,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPN,EAAYN,GACZO,GAAY,IALhB,sBAaJ,6BACE,6BACGlB,EACCD,EACA,CACEM,WACAD,eAEFoB,KAAI,SAACC,EAAMC,GAAP,OACJ,oBAAkC,UAAQ,OAA1C,SAAkDD,GAAzCA,EAAOC,EAAMC,uBC9HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bd4b4bda.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  options: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n  const { isReversed, sortType } = options;\n\n  visibleGoods.sort((prevGood, currentGood) => {\n    const {\n      ALPHABET,\n      LENGTH,\n      NONE,\n    } = SortType;\n\n    switch (sortType) {\n      case ALPHABET:\n        return prevGood.localeCompare(currentGood);\n      case LENGTH:\n        return prevGood.length - currentGood.length;\n      case NONE:\n        return 0;\n      default: return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const {\n    LENGTH,\n    ALPHABET,\n    NONE,\n  } = SortType;\n  const [sortType, setSortType] = useState(NONE);\n  const [isReversed, setReversed] = useState(false);\n  const visibleReset = isReversed || (sortType !== NONE);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== ALPHABET,\n          })}\n          onClick={() => (setSortType(ALPHABET))}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': sortType !== LENGTH,\n          })}\n          onClick={() => (setSortType(LENGTH))}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => (\n            isReversed\n              ? setReversed(false)\n              : setReversed(true)\n          )}\n        >\n          Reverse\n        </button>\n\n        {visibleReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType(NONE);\n              setReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer,\n            {\n              sortType,\n              isReversed,\n            },\n          ).map((good, index) => (\n            <li key={good + index.toString()} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}